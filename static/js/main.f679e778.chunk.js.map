{"version":3,"sources":["assets/sliderContent.tsx","components/slider/Slider.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["employeeList","name","age","ocupation","Slider","sliderList","useState","current","setCurrent","touchSwipeDirection","setTouchSwipeDirection","mouseSwipeDirection","setMouseSwipeDirection","next","setNext","length","prev","setPrev","boxHeight","setBoxHeight","activeAnimationRight","setActiveAnimationRight","activeAnimationLeft","setActiveAnimationLeft","slider","sliderElement","useRef","endAnimationHandler","useEffect","offsetHeight","slideRightHandler","slideLeftHandler","sliderClassnames","0","1","2","onMouseDown","e","clientX","onMouseUp","onTouchStart","changedTouches","onTouchEnd","className","onClick","style","height","map","item","i","onAnimationEnd","ref","width","display","flexDirection","textAlign","background","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f679e778.chunk.js","sourcesContent":["export const employeeList = [\n  {\n    name: 'Jānis',\n    age: 10,\n    ocupation: 'Strādnieks',\n  },\n  {\n    name: 'Normunds',\n    age: 20,\n    ocupation: 'Students',\n  },\n  {\n    name: 'Ivars',\n    age: 45,\n    ocupation: 'Darbinieks',\n  },\n  {\n    name: 'Pēteris',\n    age: 33,\n    ocupation: 'Traktorists',\n  },\n  {\n    name: 'Aigars',\n    age: 27,\n    ocupation: 'Kaimbainists',\n  },\n  {\n    name: 'Anna',\n    age: 29,\n    ocupation: 'Skolotāja',\n  },\n];\n","import React, { useEffect, useRef, useState } from 'react';\nimport './Slider.css';\n// replace line below with your list\nimport { employeeList } from '../../assets/sliderContent';\n\nconst Slider = () => {\n  const sliderList = employeeList;\n\n  const [current, setCurrent] = useState(0);\n  const [touchSwipeDirection, setTouchSwipeDirection] = useState([0, 0]);\n  const [mouseSwipeDirection, setMouseSwipeDirection] = useState([0, 0]);\n  const [next, setNext] = useState(1);\n  const [prev, setPrev] = useState(sliderList.length - 1);\n  const [boxHeight, setBoxHeight] = useState<number>();\n  const [activeAnimationRight, setActiveAnimationRight] = useState(false);\n  const [activeAnimationLeft, setActiveAnimationLeft] = useState(false);\n\n  const slider = [sliderList[prev], sliderList[current], sliderList[next]];\n  const sliderElement = useRef<HTMLDivElement>(null);\n\n  const endAnimationHandler = () => {\n    setActiveAnimationRight(false);\n    setActiveAnimationLeft(false);\n  };\n\n  useEffect(() => {\n    if (current === 0) {\n      setPrev(sliderList.length - 1);\n    } else {\n      setPrev(current - 1);\n    }\n    if (current === sliderList.length - 1) {\n      setNext(0);\n    } else {\n      setNext(current + 1);\n    }\n    setBoxHeight(sliderElement.current?.offsetHeight);\n  }, [activeAnimationRight, activeAnimationLeft]);\n\n  const slideRightHandler = () => {\n    if (!activeAnimationLeft) {\n      setActiveAnimationRight(true);\n    }\n  };\n\n  useEffect(() => {\n    if (!activeAnimationRight) {\n      if (current === sliderList.length - 1) {\n        setCurrent(0);\n      } else {\n        setCurrent(current + 1);\n      }\n    }\n  }, [activeAnimationRight]);\n\n  const slideLeftHandler = () => {\n    if (!activeAnimationRight) {\n      setActiveAnimationLeft(true);\n    }\n  };\n\n  useEffect(() => {\n    if (!activeAnimationLeft) {\n      if (current === 0) {\n        setCurrent(sliderList.length - 1);\n      } else {\n        setCurrent(current - 1);\n      }\n    }\n  }, [activeAnimationLeft]);\n\n  useEffect(() => {\n    if (touchSwipeDirection[0] < touchSwipeDirection[1]) {\n      slideLeftHandler();\n    } else if (touchSwipeDirection[0] > touchSwipeDirection[1]) {\n      slideRightHandler();\n    }\n  }, [touchSwipeDirection]);\n\n  useEffect(() => {\n    if (mouseSwipeDirection[0] < mouseSwipeDirection[1]) {\n      slideLeftHandler();\n    } else if (mouseSwipeDirection[0] > mouseSwipeDirection[1]) {\n      slideRightHandler();\n    }\n  }, [mouseSwipeDirection]);\n\n  const sliderClassnames: { [key: number]: string } = {\n    0: `slider slider--prev-content ${\n      activeAnimationLeft ? 'slider--left-animation' : ''\n    }`,\n    1: `slider ${\n      activeAnimationRight\n        ? 'slider--center-move-right'\n        : activeAnimationLeft && 'slider--center-move-left'\n    }`,\n    2: `slider slider--next-content ${\n      activeAnimationRight ? 'slider--right-animation' : ''\n    }`,\n  };\n\n  return (\n    <>\n      <div\n        onMouseDown={(e) => {\n          setMouseSwipeDirection([e.clientX]);\n        }}\n        onMouseUp={(e) => {\n          setMouseSwipeDirection([...mouseSwipeDirection, e.clientX]);\n        }}\n        onTouchStart={(e) => {\n          setTouchSwipeDirection([e.changedTouches[0].clientX]);\n        }}\n        onTouchEnd={(e) => {\n          setTouchSwipeDirection([\n            ...touchSwipeDirection,\n            e.changedTouches[0].clientX,\n          ]);\n        }}\n        className=\"slider-wrapper\"\n      >\n        <button onClick={slideLeftHandler} className=\"left-arrow\"></button>\n        <div\n          style={{ height: `${boxHeight}px` }}\n          className=\"slider--visible-content-window\"\n        >\n          {slider.map((item, i) => {\n            return (\n              <div\n                onAnimationEnd={endAnimationHandler}\n                ref={sliderElement}\n                key={`${i}`}\n                className={sliderClassnames[i]}\n              >\n                <div\n                  style={{\n                    width: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    textAlign: 'center',\n                    background:\n                      'linear-gradient(to right, rgb(240, 5, 5), rgb(239, 239, 11))',\n                  }}\n                >\n                  <h1>{item.name}</h1>\n                  <h1>{item.age}</h1>\n                  <h1>{item.ocupation}</h1>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <button onClick={slideRightHandler} className=\"right-arrow\"></button>\n      </div>\n    </>\n  );\n};\nexport default Slider;\n","import React from 'react';\nimport Slider from './components/slider/Slider';\n\nconst App = () => {\n\n  return (\n    <div>\n      <Slider />\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}